
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVMODrightSGNASK CALL COME DIV FROM LPAREN MINUS MOD NEXT NOTE NUMBER PLUS RPAREN SGN STRING TELL TIMES VARprogram : statementsstatements : statements NEXT statement\n                  | statementstatement : NUMBER statement_body\n                statement : statement_body\n                 statement_body : comment\n                      | call\n                      | ask\n                      | tell\n                      | come_fromcomment : NOTE VARcomment : comment VARcall : CALL expression VARask : ASK VARtell : TELL expressionsexpressions : expressionexpressions : expressions expressioncome_from : COME FROM expressionexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIV factor\n            | term MOD factorterm : factorfactor : SGN factorfactor : LPAREN expression RPARENfactor : NUMBERfactor : STRINGfactor : VAR'
    
_lr_action_items = {'NUMBER':([0,12,14,16,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,41,43,44,45,46,47,48,],[4,26,26,4,-30,-21,-25,26,26,-28,-29,26,-16,26,26,26,26,26,26,-26,-17,-19,-20,-22,-23,-24,-27,]),'NOTE':([0,4,16,],[11,11,11,]),'CALL':([0,4,16,],[12,12,12,]),'ASK':([0,4,16,],[13,13,13,]),'TELL':([0,4,16,],[14,14,14,]),'COME':([0,4,16,],[15,15,15,]),'$end':([1,2,3,5,6,7,8,9,10,17,18,19,21,22,23,26,27,28,29,30,32,33,39,41,42,43,44,45,46,47,48,],[0,-1,-3,-5,-6,-7,-8,-9,-10,-4,-12,-11,-30,-21,-25,-28,-29,-14,-15,-16,-2,-13,-26,-17,-18,-19,-20,-22,-23,-24,-27,]),'NEXT':([2,3,5,6,7,8,9,10,17,18,19,21,22,23,26,27,28,29,30,32,33,39,41,42,43,44,45,46,47,48,],[16,-3,-5,-6,-7,-8,-9,-10,-4,-12,-11,-30,-21,-25,-28,-29,-14,-15,-16,-2,-13,-26,-17,-18,-19,-20,-22,-23,-24,-27,]),'VAR':([6,11,12,13,14,18,19,20,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,41,43,44,45,46,47,48,],[18,19,21,28,21,-12,-11,33,-30,-21,-25,21,21,-28,-29,21,-16,21,21,21,21,21,21,-26,-17,-19,-20,-22,-23,-24,-27,]),'SGN':([12,14,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,41,43,44,45,46,47,48,],[24,24,-30,-21,-25,24,24,-28,-29,24,-16,24,24,24,24,24,24,-26,-17,-19,-20,-22,-23,-24,-27,]),'LPAREN':([12,14,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,41,43,44,45,46,47,48,],[25,25,-30,-21,-25,25,25,-28,-29,25,-16,25,25,25,25,25,25,-26,-17,-19,-20,-22,-23,-24,-27,]),'STRING':([12,14,21,22,23,24,25,26,27,29,30,31,34,35,36,37,38,39,41,43,44,45,46,47,48,],[27,27,-30,-21,-25,27,27,-28,-29,27,-16,27,27,27,27,27,27,-26,-17,-19,-20,-22,-23,-24,-27,]),'FROM':([15,],[31,]),'PLUS':([20,21,22,23,26,27,30,39,40,41,42,43,44,45,46,47,48,],[34,-30,-21,-25,-28,-29,34,-26,34,34,34,-19,-20,-22,-23,-24,-27,]),'MINUS':([20,21,22,23,26,27,30,39,40,41,42,43,44,45,46,47,48,],[35,-30,-21,-25,-28,-29,35,-26,35,35,35,-19,-20,-22,-23,-24,-27,]),'TIMES':([21,22,23,26,27,39,43,44,45,46,47,48,],[-30,36,-25,-28,-29,-26,36,36,-22,-23,-24,-27,]),'DIV':([21,22,23,26,27,39,43,44,45,46,47,48,],[-30,37,-25,-28,-29,-26,37,37,-22,-23,-24,-27,]),'MOD':([21,22,23,26,27,39,43,44,45,46,47,48,],[-30,38,-25,-28,-29,-26,38,38,-22,-23,-24,-27,]),'RPAREN':([21,22,23,26,27,39,40,43,44,45,46,47,48,],[-30,-21,-25,-28,-29,-26,48,-19,-20,-22,-23,-24,-27,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,16,],[3,32,]),'statement_body':([0,4,16,],[5,17,5,]),'comment':([0,4,16,],[6,6,6,]),'call':([0,4,16,],[7,7,7,]),'ask':([0,4,16,],[8,8,8,]),'tell':([0,4,16,],[9,9,9,]),'come_from':([0,4,16,],[10,10,10,]),'expression':([12,14,25,29,31,],[20,30,40,41,42,]),'term':([12,14,25,29,31,34,35,],[22,22,22,22,22,43,44,]),'factor':([12,14,24,25,29,31,34,35,36,37,38,],[23,23,39,23,23,23,23,23,45,46,47,]),'expressions':([14,],[29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',41),
  ('statements -> statements NEXT statement','statements',3,'p_statements','parser.py',45),
  ('statements -> statement','statements',1,'p_statements','parser.py',46),
  ('statement -> NUMBER statement_body','statement',2,'p_statement_numbered','parser.py',50),
  ('statement -> statement_body','statement',1,'p_statement_simple','parser.py',55),
  ('statement_body -> comment','statement_body',1,'p_statement_body','parser.py',60),
  ('statement_body -> call','statement_body',1,'p_statement_body','parser.py',61),
  ('statement_body -> ask','statement_body',1,'p_statement_body','parser.py',62),
  ('statement_body -> tell','statement_body',1,'p_statement_body','parser.py',63),
  ('statement_body -> come_from','statement_body',1,'p_statement_body','parser.py',64),
  ('comment -> NOTE VAR','comment',2,'p_comment_single','parser.py',68),
  ('comment -> comment VAR','comment',2,'p_comment_chain','parser.py',72),
  ('call -> CALL expression VAR','call',3,'p_call','parser.py',77),
  ('ask -> ASK VAR','ask',2,'p_ask','parser.py',81),
  ('tell -> TELL expressions','tell',2,'p_tell','parser.py',85),
  ('expressions -> expression','expressions',1,'p_expressions_single','parser.py',89),
  ('expressions -> expressions expression','expressions',2,'p_expressions_multiple','parser.py',93),
  ('come_from -> COME FROM expression','come_from',3,'p_come_from','parser.py',97),
  ('expression -> expression PLUS term','expression',3,'p_expression_binop','parser.py',101),
  ('expression -> expression MINUS term','expression',3,'p_expression_binop','parser.py',102),
  ('expression -> term','expression',1,'p_expression_term','parser.py',106),
  ('term -> term TIMES factor','term',3,'p_term_binop','parser.py',110),
  ('term -> term DIV factor','term',3,'p_term_binop','parser.py',111),
  ('term -> term MOD factor','term',3,'p_term_binop','parser.py',112),
  ('term -> factor','term',1,'p_term_factor','parser.py',116),
  ('factor -> SGN factor','factor',2,'p_factor_sgn','parser.py',120),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_group','parser.py',124),
  ('factor -> NUMBER','factor',1,'p_factor_number','parser.py',128),
  ('factor -> STRING','factor',1,'p_factor_string','parser.py',132),
  ('factor -> VAR','factor',1,'p_factor_var','parser.py',136),
]
